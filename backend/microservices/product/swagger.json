{
    "openapi": "3.0.0",
    "info": {
      "title": "Product API",
      "version": "1.0.0",
      "description": "A simple Express Product API"
    },
    "paths": {
      "/api/products": {
        "get": {
          "summary": "Returns the list of all the products",
          "tags": ["Products"],
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "Page number",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of items per page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "filterText",
              "in": "query",
              "description": "Text to filter products by name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "includeQty",
              "in": "query",
              "description": "Include quantity in the response",
              "required": false,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The list of the products",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new product",
          "tags": ["Products"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "The product was successfully created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "/api/products/{id}": {
        "get": {
          "summary": "Get the product by id",
          "tags": ["Products"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "The product id"
            }
          ],
          "responses": {
            "200": {
              "description": "The product description by id",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            },
            "404": {
              "description": "The product was not found"
            }
          }
        },
        "put": {
          "summary": "Update the product by the id",
          "tags": ["Products"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "The product id"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "The product was updated",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            },
            "404": {
              "description": "The product was not found"
            }
          }
        },
        "delete": {
          "summary": "Remove the product by id",
          "tags": ["Products"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "integer"
              },
              "required": true,
              "description": "The product id"
            }
          ],
          "responses": {
            "200": {
              "description": "The product was deleted"
            },
            "404": {
              "description": "The product was not found"
            }
          }
        }
      }
    },
    "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "required": ["name", "company", "category", "price", "inventory"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "The auto-generated id of the product"
          },
          "name": {
            "type": "string",
            "description": "The name of the product"
          },
          "description": {
            "type": "string",
            "description": "The description of the product"
          },
          "company": {
            "type": "string",
            "description": "The company of the product"
          },
          "category": {
            "type": "string",
            "description": "The category of the product"
          },
          "major_conditions": {
            "type": "string",
            "description": "The major conditions of the product"
          },
          "minor_conditions": {
            "type": "string",
            "description": "The minor conditions of the product"
          },
          "price": {
            "type": "number",
            "description": "The price of the product"
          },
          "inventory": {
            "type": "integer",
            "description": "The inventory count of the product"
          }
        },
        "example": {
          "id": 1,
          "name": "Product A",
          "description": "Description of Product A",
          "company": "Company A",
          "category": "Category A",
          "major_conditions": "Major Conditions A",
          "minor_conditions": "Minor Conditions A",
          "price": 19.99,
          "inventory": 10
        }
      }
    }
  }
}